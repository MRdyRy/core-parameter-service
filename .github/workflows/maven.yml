# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: build, test and push-img

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master","pre/*", "sit/*", "dev/*" ]
  pull_request_target:
    types:
      - closed
      - merged

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build and Test
        run: mvn clean package -U -X -T 4 --file pom.xml

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          
      - name: get version
        shell: bash
        run: echo PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) | cut -d- -f1 >> $GITHUB_ENV
        
      # - name: verify
      #   run: mvn verify -DskipTests --file pom.xml

      - name: Build and Test
        run: mvn -B package -X -T 4 --file pom.xml
        
      - name: print version
        run: echo ${{env.PROJECT_VERSION}}

      - name: fixed version
        env: 
          version_fix: ""
        shell: bash
        run : |
          version_fix=${{env.PROJECT_VERSION}}
          version_fix=${version_fix//.}
          echo FIXED_VERSION=${version_fix} >> $GITHUB_ENV
      - name: print fixed version
        run: echo ${{env.FIXED_VERSION}}
        
  push_image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: docker-login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          IMAGE_NAME: serfanrud/core-parameter-service
          PROJECT_VERSION: ${{env.PROJECT_VERSION}}
          FIXED_VERSION: ${{env.FIXED_VERSION}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build docker image
        run: docker build --file docker/Dockerfile --tag $IMAGE_NAME:$FIXED_VERSION .

      - name: Docker push
        run: docker push $IMAGE_NAME:$FIXED_VERSION
